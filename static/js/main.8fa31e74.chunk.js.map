{"version":3,"sources":["Components/Items.js","App.js","reportWebVitals.js","index.js"],"names":["Items","props","className","text","onClick","onCheck","id","App","useState","inputs","setInputs","items","setItems","deleteItem","prevItems","filter","item","index","type","placeholder","onChange","e","val","target","value","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAceA,MAXf,SAAeC,GACX,OACE,sBAAKC,UAAU,OAAf,UACE,6BACGD,EAAME,OAET,mBAAGC,QAAS,WAAOH,EAAMI,QAAQJ,EAAMK,KAAMJ,UAAU,qBC6ChDK,MAlDf,WAEE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAgBMC,EAAa,SAACP,GAClBM,GAAS,SAACE,GACR,OAAOA,EAAUC,QAAO,SAACC,EAAKC,GAC5B,OAAOA,IAAUX,SAKvB,OACE,sBAAKJ,UAAU,YAAf,UACE,4CACA,uBACEgB,KAAK,OACLC,YAAY,gBACZC,SA5Be,SAACC,GACpB,IAAMC,EAAMD,EAAEE,OAAOC,MACrBd,EAAUY,IA2BNE,MAAOf,IAET,wBAAQP,UAAU,MAAME,QA1BX,WACZK,EAAOgB,OAAS,IACjBb,GAAS,SAACE,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsBL,OAExBC,EAAU,MAqBV,iBACA,qBAAKR,UAAU,iBAAf,SACA,6BACGS,EAAMe,KAAI,SAACV,EAAMC,GAChB,OACI,cAAC,EAAD,CAAmBX,GAAIW,EAAOd,KAAMa,EAAMX,QAASQ,GAAvCI,cCjCXU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8fa31e74.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Items.css\"\r\n\r\nfunction Items(props) {\r\n    return (\r\n      <div className=\"item\">\r\n        <li>\r\n          {props.text}\r\n        </li>\r\n        <i onClick={() => {props.onCheck(props.id)}} className=\"fas fa-trash\"></i>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Items\r\n","import React, {useState} from 'react';\nimport \"./App.css\";\nimport Items from './Components/Items';\n\nfunction App() {\n\n  const [inputs, setInputs] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  const handleChange = (e) => {\n    const val = e.target.value;\n    setInputs(val)\n  }\n\n  const itemList = () => {\n    if(inputs.length > 0){\n      setItems((prevItems) => {\n        return [...prevItems, inputs];\n      });\n      setInputs(\"\");\n    }\n  }\n\n  const deleteItem = (id) => {\n    setItems((prevItems)=>{\n      return prevItems.filter((item,index)=>{\n        return index !== id;\n      })\n    })\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>To Do List</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Add Item Here\"\n        onChange={handleChange}\n        value={inputs}\n      />\n      <button className=\"btn\" onClick={itemList}>Add</button>\n      <div className=\"item-container\">\n      <ol >\n        {items.map((item, index) => {\n          return (\n              <Items key={index} id={index} text={item} onCheck={deleteItem}/>\n          );\n        })}\n      </ol>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}